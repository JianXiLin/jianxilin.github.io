{"meta":{"title":"Jianxi's Blog","subtitle":"Learn to code and share","description":"","author":"JianxiLin","url":"https://jianxilin.github.io","root":"/"},"pages":[{"title":"categories","date":"2020-05-10T16:01:52.000Z","updated":"2020-05-10T16:06:36.161Z","comments":true,"path":"categories/index.html","permalink":"https://jianxilin.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-05-10T16:02:27.000Z","updated":"2020-05-10T16:06:09.613Z","comments":true,"path":"tags/index.html","permalink":"https://jianxilin.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"[总结]CSS样式失效的原因","slug":"总结-CSS样式失效的原因","date":"2020-05-11T06:49:33.000Z","updated":"2020-05-11T06:54:20.527Z","comments":true,"path":"2020/05/11/总结-CSS样式失效的原因/","link":"","permalink":"https://jianxilin.github.io/2020/05/11/%E6%80%BB%E7%BB%93-CSS%E6%A0%B7%E5%BC%8F%E5%A4%B1%E6%95%88%E7%9A%84%E5%8E%9F%E5%9B%A0/","excerpt":"CSS样式生效，需要正确的语法，并且其样式内容不被覆盖。以下先总结三点原因（后续再补充）：🔹 错误使用单行注释🔹 CSS选择器优先级较低🔹 Chrome浏览器存在CSS文件缓存","text":"CSS样式生效，需要正确的语法，并且其样式内容不被覆盖。以下先总结三点原因（后续再补充）：🔹 错误使用单行注释🔹 CSS选择器优先级较低🔹 Chrome浏览器存在CSS文件缓存 1. 在外部CSS中不能使用单行注释 在CSS选择器上使用单行注释，将导致该注释下的这个CSS选择器里面的内容失效。如下代码所示,“.post-readmore__link{}”将失效,“.post-readmore__link:hover{}”有效，不会受到影响。 1234567//readmore button （第一个CSS选择器无效）.post-readmore__link&#123; background-color: #27ae60;&#125;.post-readmore__link:hover&#123; background-color: #1f7f47;&#125; 而单行注释添加在CSS样式内，该CSS仍有效 123.post-readmore__link&#123; background-color: #27ae60; //green （有效）&#125; 若需要使用注释，可使用多行注释。如下： 1234/* readmore button */.post-readmore__link&#123; background-color: #27ae60; //green （有效）&#125; 2. CSS选择器优先级低于原有的CSS选择器 2.1. 当多个CSS选择器选择目标相同时 🔹 级别相同，后加载的CSS选择器覆盖前CSS选择器中相同的样式。🔹 级别不同，高级别CSS选择器覆盖低级别CSS选择器中相同的样式。 2.2. 级别判断 🔹 内嵌式CSS级别高于外部CSS，可视为最高级别。 🔹 #==ID== &gt; .==Class==、属性选择器([type=”button”])和伪类(:hover) &gt; ==标签==类型和伪元素(::after)级别计算案例：图片内容来源：MDN Web Docs 🔹 使用!important覆盖任何样式声明 123.post-readmore__link&#123; background-color: #27ae60 !important;&#125; 对于都添加！important的样式，则再由其选择器优先级来判断。 3.chrome浏览器存在缓存 🔹 原因:&emsp;&emsp;chrome浏览器为了提高加载效率，缓存了JS、CSS文件，故修改后的文件无法立即生效。 🔹 解决方法：&emsp;&emsp;清除缓存，其中一种方式：来回切换开启缓存来重置缓存内容。&emsp;&emsp;F12打开开发者工具，进入Network，在Disable cache前打勾✔，刷新页面。再把Disable cache关闭，取消✔，再次刷新页面。","categories":[{"name":"踩坑记录","slug":"踩坑记录","permalink":"https://jianxilin.github.io/categories/%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"},{"name":"前端","slug":"踩坑记录/前端","permalink":"https://jianxilin.github.io/categories/%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/%E5%89%8D%E7%AB%AF/"},{"name":"CSS","slug":"踩坑记录/前端/CSS","permalink":"https://jianxilin.github.io/categories/%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/%E5%89%8D%E7%AB%AF/CSS/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://jianxilin.github.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"CSS","slug":"CSS","permalink":"https://jianxilin.github.io/tags/CSS/"}]},{"title":"个人博客[2]——美化","slug":"个人博客-2-——美化","date":"2020-05-11T06:46:50.000Z","updated":"2020-05-11T06:56:49.141Z","comments":true,"path":"2020/05/11/个人博客-2-——美化/","link":"","permalink":"https://jianxilin.github.io/2020/05/11/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-2-%E2%80%94%E2%80%94%E7%BE%8E%E5%8C%96/","excerpt":"环境要求：node.js 和 npm基于 Hexo博客框架基于 Hexo主题stun 美化内容以下：🔹 主题设置🔹 博客主题样式自定义🔹 博客文章样式自定义","text":"环境要求：node.js 和 npm基于 Hexo博客框架基于 Hexo主题stun 美化内容以下：🔹 主题设置🔹 博客主题样式自定义🔹 博客文章样式自定义 效果图： 👉Hexo官方地址 👉Hexo-theme-stun官方地址 1. 修改主题 1.1. 下载主题(stun) git clone https://github.com/liuyib/hexo-theme-stun.git themes/stun 1.2. 配置主题 修改_config.yml 123#Extensions...theme: yilia 1.3. Hexo重设与发布 清除 hexo clean 创建 hexo g 启动 hexo s 推到远端 hexo d 2. 基本样式修改 主题的相关设置详见官方文档📗 可修改Hexo主路径下的_config.yml,将生效于所有主题。也可修改hexo/theme/stun下的_config.xml,将只生效于stun主题。 2.1. 修改博客图标等图片 🔹 方式一：覆盖原图像 在Hexo主路径下的\\themes\\stun\\source\\images\\icons中，使用相同大小的图片覆盖。之后查看stun下的_config.xml是否开启对应的功能。 🔹 方式二：自定义路径 在_config.xml相应的配置下，设置图片路径为自定义图片路径（Hexo下的路径、图床上的路径） 2.2. 修改网页样式 🔹 修改文章样式 将CSS样式添加到stun主题的路径下的\\source\\css_custom\\index.styl文件内即可。内容如下： 1234567891011121314151617// Custom styles by yourself.// You should always modify the style here, not in the source code.// Otherwise, when the theme is updated, the code you modified will be overwritten.body &#123; // modify your style here // eg: background-color: blue; h1 &#123; text-align: center; &#125; h1, h2&#123; color: #4CAF50; &#125; ...&#125; 🔹 修改博客样式 （1）在stun主题的路径下的\\source\\css创建文件夹，自定义名称，名称前需带”_”，例如：_myCss。在该创建的文件夹下放置个人的CSS文件。（2）配置CSS文件。在stun\\source\\css\\index.styl文件内添加以下内容：@import ‘个人的CSS文件全路径’如下： 12345678910111213141516// Variables Layer// --------------------------------------------------@import './_variables/index.styl';// Mixins Layer// --------------------------------------------------@import './_mixins/index.styl';// Common Layer// --------------------------------------------------@import './_common/index.styl';// Custom Layer// --------------------------------------------------@import './_custom/index.styl';// MyCSS// --------------------------------------------------@import './_myCss/myCss.css';","categories":[{"name":"个人博客","slug":"个人博客","permalink":"https://jianxilin.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"个人博客","slug":"个人博客","permalink":"https://jianxilin.github.io/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"}]},{"title":"个人博客[3]——写作","slug":"个人博客-3-——写作","date":"2020-05-11T06:44:24.000Z","updated":"2020-05-11T06:55:24.757Z","comments":true,"path":"2020/05/11/个人博客-3-——写作/","link":"","permalink":"https://jianxilin.github.io/2020/05/11/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-3-%E2%80%94%E2%80%94%E5%86%99%E4%BD%9C/","excerpt":"环境要求：node.js 和 npm基于 Hexo博客框架基于 Hexo主题stun 本文内容包含：🔹 创建、修改、删除文章🔹 创建分类、标签页面🔹 在stun主题内开启分页和标签页面","text":"环境要求：node.js 和 npm基于 Hexo博客框架基于 Hexo主题stun 本文内容包含：🔹 创建、修改、删除文章🔹 创建分类、标签页面🔹 在stun主题内开启分页和标签页面 1. 创建 具体操作见官方文档📗 1.1. 创建文章 12hexo n \"文章名称\"hexo c &amp; hexo g 1.2. 创建分类、标签页面（即创建页面） 🔹 创建分类页面 在Hexo主路径下，执行以下命令 1hexo new page categories 在文章编写时，在文章顶部的Front-matter添加分类信息： 1234categories： - 分类名称 - 下一级分类名称 - [同级分类名称...] 🔹 创建标签页面 与创建分页页面相同，将categories改为tags即可。不同的是，Front-matter中的tags没有分级。 例子： 12345678910---title: '个人博客[1]——搭建'date: 2020-05-10 17:39:21tags: 个人博客categories: - 个人博客photos: - url--- 🔹 在stun主题内开启分页和标签页面 在stun主路径下的_config.yml配置文件的menu节点下添加页面配置信息，如下 1234567menu: home: / || fas fa-home archives: /archives/ || fas fa-folder-open categories: /categories/ || fas fa-layer-group tags: /tags/ || fas fa-tags # You can add a secondary menu like follow. # xxx1: javascript:; || fa(s|r|l|d|b) fa-xxx 效果图： 2.修改 2.1. 修改文章名称 &emsp;&emsp;Hexo未提供修改文件名称的命令。 🔹 解决方法： &emsp;&emsp;最简单的方式就是重新创建该文章，将要修改文章迁移过去。单独修改文章名称和修改文章内的Title标签是无效的。&emsp;&emsp;也可使用hexo-console-renamer插件，后续使用后再来补充。 2.2 删除文章 &emsp;&emsp;同样的，Hexo未提供删除文章的命令。 🔹 解决方法： &emsp;&emsp;在Hexo主路径下的\\source_posts文件夹内，手动删除文章文件，之后再重新创建博客内容，即运行以下命令 1hexo c &amp; hexo g","categories":[{"name":"个人博客","slug":"个人博客","permalink":"https://jianxilin.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"个人博客","slug":"个人博客","permalink":"https://jianxilin.github.io/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"}]},{"title":"个人博客[1]——搭建","slug":"个人博客-1-——搭建","date":"2020-05-10T09:39:21.000Z","updated":"2020-05-11T04:32:41.744Z","comments":true,"path":"2020/05/10/个人博客-1-——搭建/","link":"","permalink":"https://jianxilin.github.io/2020/05/10/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-1-%E2%80%94%E2%80%94%E6%90%AD%E5%BB%BA/","excerpt":"环境要求：node.js 和 npm基于 Hexo博客框架 👉Hexo官方地址","text":"环境要求：node.js 和 npm基于 Hexo博客框架 👉Hexo官方地址 1. 配置环境 安装node.js和npm修改npm的镜像为阿里镜像，即按照cnpm 安装cnpm cmd命令： &emsp;&emsp;npm install -g cnpm –registry=https://registry.npm.taobao.org 安装测试： &emsp;&emsp;cnpm -v 2. 安装Hexo框架 2.1. 安装：cnpm install -g hero-cli 2.2. 验证安装：hexo -v 3. 初始化Hexo博客 3.1. 初始化hexo项目：hexo init 3.2. 启动项目：hexo s 4. 添加第一篇文章 👉Hexo官方:写作 创建新文章：hexo n 文件名 清理：hexo clean 生成文章：hexo g 重启：hexo s 5. 部署到GitHub上 5.1. 创建git仓库,名称为 “git账号名.github.io”5.2. 安装github部署插件。 在本地博客路径下，运行 cnpm install –save hexo-deployer-git 5.3. 添加仓库信息 修改_config.yml。 在#deployment节点下，内容如下： ==冒号后需 + 空格== 12345#deploymentdeploy: type: git repo: 仓库地址 branch: master5.4. 部署到远端 hexo d","categories":[{"name":"个人博客","slug":"个人博客","permalink":"https://jianxilin.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"个人博客","slug":"个人博客","permalink":"https://jianxilin.github.io/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"}]}],"categories":[{"name":"踩坑记录","slug":"踩坑记录","permalink":"https://jianxilin.github.io/categories/%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"},{"name":"前端","slug":"踩坑记录/前端","permalink":"https://jianxilin.github.io/categories/%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/%E5%89%8D%E7%AB%AF/"},{"name":"CSS","slug":"踩坑记录/前端/CSS","permalink":"https://jianxilin.github.io/categories/%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/%E5%89%8D%E7%AB%AF/CSS/"},{"name":"个人博客","slug":"个人博客","permalink":"https://jianxilin.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://jianxilin.github.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"CSS","slug":"CSS","permalink":"https://jianxilin.github.io/tags/CSS/"},{"name":"个人博客","slug":"个人博客","permalink":"https://jianxilin.github.io/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"}]}