[{"title":"个人博客[1]——搭建","url":"/2020/05/10/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-1-%E2%80%94%E2%80%94%E6%90%AD%E5%BB%BA/","content":"<blockquote>\n<p>环境要求：node.js 和 npm<br>基于 Hexo博客框架</p>\n</blockquote>\n<p><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://hexo.io/zh-cn/index.html\"  target=\"_blank\" rel=\"noopener\">👉Hexo官方地址</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></p>\n<a id=\"more\"></a>\n\n        <h2 id=\"1-配置环境\"   >\n          <a href=\"#1-配置环境\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>1. 配置环境</h2>\n      <p>安装node.js和npm<br>修改npm的镜像为阿里镜像，即按照cnpm</p>\n<ul>\n<li><p><b>安装cnpm</b><br>  cmd命令：<br>  &emsp;&emsp;npm install -g cnpm –registry=<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://registry.npm.taobao.org\"  target=\"_blank\" rel=\"noopener\">https://registry.npm.taobao.org</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span><br>  安装测试：<br>  &emsp;&emsp;cnpm -v</p>\n<p>  <img   src=\"https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/%E5%8D%9A%E5%AE%A2/20200509224340.png?x-oss-process=image/resize,p_70/sharpen,100\" style=\"width: image/resize,p_70/sharpen,100px;\"  alt=\"20200509224340\"></p>\n</li>\n</ul>\n\n        <h2 id=\"2-安装Hexo框架\"   >\n          <a href=\"#2-安装Hexo框架\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>2. 安装Hexo框架</h2>\n      <p>2.1. 安装：cnpm install -g hero-cli<br>   <img   src=\"https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/%E5%8D%9A%E5%AE%A2/20200509230904.png?x-oss-process=image/resize,p_100/sharpen,50\" style=\"width: image/resize,p_100/sharpen,50px;\"  alt=\"博客/20200509230904\"></p>\n<p>2.2. 验证安装：hexo -v<br>    <img   src=\"https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/%E5%8D%9A%E5%AE%A2/20200509230612.png?x-oss-process=image/resize,p_100/sharpen,50\" style=\"width: image/resize,p_100/sharpen,50px;\"  alt=\"博客/20200509230612\"></p>\n\n        <h2 id=\"3-初始化Hexo博客\"   >\n          <a href=\"#3-初始化Hexo博客\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>3. 初始化Hexo博客</h2>\n      <p>3.1. 初始化hexo项目：hexo init<br><img   src=\"https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/%E5%8D%9A%E5%AE%A2/20200509234848.png?x-oss-process=image/resize,p_70/sharpen,100\" style=\"width: image/resize,p_70/sharpen,100px;\"  alt=\"博客/20200509234848\"></p>\n<p>3.2. 启动项目：hexo s<br><img   src=\"https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/%E5%8D%9A%E5%AE%A2/20200510005009.png?x-oss-process=image/resize,p_70/sharpen,100\" style=\"width: image/resize,p_70/sharpen,100px;\"  alt=\"博客/20200510005009\"></p>\n\n        <h2 id=\"4-添加第一篇文章\"   >\n          <a href=\"#4-添加第一篇文章\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>4. 添加第一篇文章</h2>\n      <p><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://hexo.io/zh-cn/docs/writing\"  target=\"_blank\" rel=\"noopener\">👉Hexo官方:写作</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></p>\n<ol>\n<li>创建新文章：hexo n 文件名</li>\n<li>清理：hexo clean</li>\n<li>生成文章：hexo g</li>\n<li>重启：hexo s</li>\n</ol>\n\n        <h2 id=\"5-部署到GitHub上\"   >\n          <a href=\"#5-部署到GitHub上\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>5. 部署到GitHub上</h2>\n      <p>5.1. 创建git仓库,名称为 “git账号名.github.io”<br>5.2. 安装github部署插件。<br>    在本地博客路径下，运行 cnpm install –save hexo-deployer-git<br>    <img   src=\"https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/%E5%8D%9A%E5%AE%A2/20200510010947.png?x-oss-process=image/resize,p_90/sharpen,100\" style=\"width: image/resize,p_90/sharpen,100px;\"  alt=\"博客/20200510010947\"><br>5.3. 添加仓库信息<br>    修改_config.yml。<br>    在#deployment节点下，内容如下：<br>    ==冒号后需 + 空格==</p>\n<pre><code><figure class=\"highlight yml\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#deployment</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">    <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">    <span class=\"attr\">repo:</span> <span class=\"string\">仓库地址</span></span><br><span class=\"line\">    <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></div></figure></code></pre><p>5.4. 部署到远端<br>    hexo d<br>    <img   src=\"https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/%E5%8D%9A%E5%AE%A2/20200510010628.png?x-oss-process=image/resize,p_100/sharpen,50\" style=\"width: image/resize,p_100/sharpen,50px;\"  alt=\"博客/20200510010628\"></p>\n","categories":["个人博客"],"tags":["个人博客"]},{"title":"个人博客[2]——美化","url":"/2020/05/11/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-2-%E2%80%94%E2%80%94%E7%BE%8E%E5%8C%96/","content":"<blockquote>\n<p>环境要求：node.js 和 npm<br>基于 Hexo博客框架<br>基于 Hexo主题stun</p>\n</blockquote>\n<p>美化内容以下：<br>🔹 主题设置<br>🔹 博客主题样式自定义<br>🔹 博客文章样式自定义</p>\n<a id=\"more\"></a>\n\n<p>效果图：<br><img   src=\"https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/%E5%8D%9A%E5%AE%A2/20200510162900.png?x-oss-process=image/resize,p_100/sharpen,50\" style=\"width: image/resize,p_100/sharpen,50px;\"  alt=\"博客/20200510162900\"></p>\n<p><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://hexo.io/zh-cn/index.html\"  target=\"_blank\" rel=\"noopener\">👉Hexo官方地址</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>  <span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://liuyib.github.io/hexo-theme-stun/zh-CN/\"  target=\"_blank\" rel=\"noopener\">👉Hexo-theme-stun官方地址</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></p>\n\n        <h2 id=\"1-修改主题\"   >\n          <a href=\"#1-修改主题\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>1. 修改主题</h2>\n      \n        <h3 id=\"1-1-下载主题-stun\"   >\n          <a href=\"#1-1-下载主题-stun\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>1.1. 下载主题(stun)</h3>\n      <p>git clone <span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/liuyib/hexo-theme-stun.git\"  target=\"_blank\" rel=\"noopener\">https://github.com/liuyib/hexo-theme-stun.git</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span> themes/stun</p>\n\n        <h3 id=\"1-2-配置主题\"   >\n          <a href=\"#1-2-配置主题\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>1.2. 配置主题</h3>\n      <p>修改_config.yml</p>\n<pre><code><figure class=\"highlight yml\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Extensions</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">yilia</span></span><br></pre></td></tr></table></div></figure></code></pre>\n        <h3 id=\"1-3-Hexo重设与发布\"   >\n          <a href=\"#1-3-Hexo重设与发布\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>1.3. Hexo重设与发布</h3>\n      <pre><code>清除 hexo clean\n创建 hexo g\n启动 hexo s\n推到远端 hexo d</code></pre>\n        <h2 id=\"2-基本样式修改\"   >\n          <a href=\"#2-基本样式修改\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>2. 基本样式修改</h2>\n      <p>主题的相关设置详见<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://liuyib.github.io/hexo-theme-stun/zh-CN/guide/primary.html#%E7%BD%91%E7%AB%99%E9%A1%B6%E9%83%A8%E8%AE%BE%E7%BD%AE\"  target=\"_blank\" rel=\"noopener\">官方文档📗</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></p>\n<p>可修改Hexo主路径下的_config.yml,将生效于所有主题。<br>也可修改hexo/theme/stun下的_config.xml,将只生效于stun主题。</p>\n\n        <h3 id=\"2-1-修改博客图标等图片\"   >\n          <a href=\"#2-1-修改博客图标等图片\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>2.1. 修改博客图标等图片</h3>\n      <p>🔹 方式一：覆盖原图像</p>\n<p>在Hexo主路径下的\\themes\\stun\\source\\images\\icons中，使用相同大小的图片覆盖。之后查看stun下的_config.xml是否开启对应的功能。</p>\n<p>🔹 方式二：自定义路径</p>\n<p>在_config.xml相应的配置下，设置图片路径为自定义图片路径（Hexo下的路径、图床上的路径）</p>\n\n        <h3 id=\"2-2-修改网页样式\"   >\n          <a href=\"#2-2-修改网页样式\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>2.2. 修改网页样式</h3>\n      <p>🔹 修改文章样式</p>\n<p>将CSS样式添加到stun主题的路径下的\\source\\css_custom\\index.styl文件内即可。<br>内容如下：</p>\n<figure class=\"highlight css\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">// Custom styles by yourself.</span><br><span class=\"line\">// You should always modify the style here,</span><br><span class=\"line\">    <span class=\"selector-tag\">not</span> <span class=\"selector-tag\">in</span> <span class=\"selector-tag\">the</span> <span class=\"selector-tag\">source</span> <span class=\"selector-tag\">code</span>.</span><br><span class=\"line\">// Otherwise, when the theme is updated,</span><br><span class=\"line\">    <span class=\"selector-tag\">the</span> <span class=\"selector-tag\">code</span> <span class=\"selector-tag\">you</span> <span class=\"selector-tag\">modified</span> <span class=\"selector-tag\">will</span> <span class=\"selector-tag\">be</span> <span class=\"selector-tag\">overwritten</span>.</span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  // modify your style here</span><br><span class=\"line\">  // eg: background-color: blue;  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-tag\">h1</span>, <span class=\"selector-tag\">h2</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>: <span class=\"number\">#4CAF50</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>🔹 修改博客样式</p>\n<p>（1）在stun主题的路径下的\\source\\css创建文件夹，自定义名称，名称前需带”_”，例如：_myCss。在该创建的文件夹下放置个人的CSS文件。<br>（2）配置CSS文件。<br>在stun\\source\\css\\index.styl文件内添加以下内容：<br>@import ‘个人的CSS文件全路径’<br>如下：</p>\n<figure class=\"highlight css\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">// Variables Layer</span><br><span class=\"line\">// --------------------------------------------------</span><br><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">'./_variables/index.styl'</span>;</span><br><span class=\"line\">// Mixins Layer</span><br><span class=\"line\">// --------------------------------------------------</span><br><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">'./_mixins/index.styl'</span>;</span><br><span class=\"line\">// Common Layer</span><br><span class=\"line\">// --------------------------------------------------</span><br><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">'./_common/index.styl'</span>;</span><br><span class=\"line\">// Custom Layer</span><br><span class=\"line\">// --------------------------------------------------</span><br><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">'./_custom/index.styl'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">// MyCSS</span><br><span class=\"line\">// --------------------------------------------------</span><br><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">'./_myCss/myCss.css'</span>;</span><br></pre></td></tr></table></div></figure>\n","categories":["个人博客"],"tags":["个人博客"]},{"title":"[总结]CSS样式失效的原因","url":"/2020/05/11/%E6%80%BB%E7%BB%93-CSS%E6%A0%B7%E5%BC%8F%E5%A4%B1%E6%95%88%E7%9A%84%E5%8E%9F%E5%9B%A0/","content":"<p>CSS样式生效，需要正确的语法，并且其样式内容不被覆盖。<br>以下先总结三点原因（后续再补充）：<br>🔹 错误使用单行注释<br>🔹 CSS选择器优先级较低<br>🔹 Chrome浏览器存在CSS文件缓存</p>\n<a id=\"more\"></a>\n\n        <h2 id=\"1-在外部CSS中不能使用单行注释\"   >\n          <a href=\"#1-在外部CSS中不能使用单行注释\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>1. 在外部CSS中不能使用单行注释</h2>\n      <p>在CSS选择器上使用单行注释，将导致该注释下的这个CSS选择器里面的内容失效。<br>如下代码所示,“.post-readmore__link{}”将失效,“.post-readmore__link:hover{}”有效，不会受到影响。</p>\n<figure class=\"highlight css\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">//readmore button （第一个CSS选择器无效）</span><br><span class=\"line\"><span class=\"selector-class\">.post-readmore__link</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#27ae60</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.post-readmore__link</span><span class=\"selector-pseudo\">:hover</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#1f7f47</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>而单行注释添加在CSS样式内，该CSS仍有效</p>\n<figure class=\"highlight css\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.post-readmore__link</span>&#123;</span><br><span class=\"line\">    background-color: #27ae60; //green （有效）</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>若需要使用注释，可使用多行注释。如下：</p>\n<figure class=\"highlight css\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* readmore button */</span></span><br><span class=\"line\"><span class=\"selector-class\">.post-readmore__link</span>&#123;</span><br><span class=\"line\">    background-color: #27ae60; //green （有效）</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n\n        <h2 id=\"2-CSS选择器优先级低于原有的CSS选择器\"   >\n          <a href=\"#2-CSS选择器优先级低于原有的CSS选择器\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>2. CSS选择器优先级低于原有的CSS选择器</h2>\n      \n        <h3 id=\"2-1-当多个CSS选择器选择目标相同时\"   >\n          <a href=\"#2-1-当多个CSS选择器选择目标相同时\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>2.1. 当多个CSS选择器选择目标相同时</h3>\n      <p>🔹 级别相同，后加载的CSS选择器覆盖前CSS选择器中相同的样式。<br>🔹 级别不同，高级别CSS选择器覆盖低级别CSS选择器中相同的样式。</p>\n\n        <h3 id=\"2-2-级别判断\"   >\n          <a href=\"#2-2-级别判断\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>2.2. 级别判断</h3>\n      <p>🔹 内嵌式CSS级别高于外部CSS，可视为最高级别。</p>\n<p>🔹 <b>#ID</b> &gt; <b>.Class</b>、属性选择器([type=”button”])和伪类(:hover)  &gt;  <b>标签</b>类型和伪元素(::after)<br>级别计算案例：<br><img   src=\"https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/keng/CSS/20200511114245.png?x-oss-process=image/resize,p_100/sharpen,50\" style=\"width: image/resize,p_100/sharpen,50px;\"  alt=\"keng/CSS/20200511114245\"><br>图片内容来源：<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance#Specificity_2\"  target=\"_blank\" rel=\"noopener\">MDN Web Docs</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></p>\n<p>🔹 使用!important覆盖任何样式声明</p>\n<figure class=\"highlight css\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.post-readmore__link</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#27ae60</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>对于都添加！important的样式，则再由其选择器优先级来判断。</p>\n\n        <h2 id=\"3-chrome浏览器存在缓存\"   >\n          <a href=\"#3-chrome浏览器存在缓存\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>3.chrome浏览器存在缓存</h2>\n      <p>🔹 原因:<br>&emsp;&emsp;chrome浏览器为了提高加载效率，缓存了JS、CSS文件，故修改后的文件无法立即生效。</p>\n<p>🔹 解决方法：<br>方式一：来回切换开启缓存来重置缓存内容（不一定有效）。<br>&emsp;&emsp;F12打开开发者工具，进入Network，在Disable cache前打勾✔，刷新页面。再把Disable cache关闭，取消✔，再次刷新页面。</p>\n<p><img   src=\"https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/keng/CSS/20200511130923.png?x-oss-process=image/resize,p_100/sharpen,50\" style=\"width: image/resize,p_100/sharpen,50px;\"  alt=\"keng/CSS/20200511130923\"></p>\n<p>方式二：来回切换开启缓存来重置缓存内容<br>&emsp;&emsp;F12打开开发者工具，然后在浏览器的刷新按钮右击，选择“清空缓存并硬性重新加载”</p>\n<p><img   src=\"https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/keng/CSS/20200511154213.png?x-oss-process=image/resize,p_100/sharpen,50\" style=\"width: image/resize,p_100/sharpen,50px;\"  alt=\"keng/CSS/20200511154213\"></p>\n","categories":["踩坑记录","前端","CSS"],"tags":["前端","CSS"]},{"title":"个人博客[3]——写作","url":"/2020/05/11/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-3-%E2%80%94%E2%80%94%E5%86%99%E4%BD%9C/","content":"<blockquote>\n<p>环境要求：node.js 和 npm<br>基于 Hexo博客框架<br>基于 Hexo主题stun</p>\n</blockquote>\n<p>本文内容包含：<br>🔹 创建、修改、删除文章<br>🔹 创建分类、标签页面<br>🔹 在stun主题内开启分页和标签页面</p>\n<a id=\"more\"></a>\n\n        <h2 id=\"1-创建\"   >\n          <a href=\"#1-创建\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>1. 创建</h2>\n      <p>具体操作见<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://hexo.io/zh-cn/docs/writing\"  target=\"_blank\" rel=\"noopener\">官方文档📗</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></p>\n\n        <h3 id=\"1-1-创建文章\"   >\n          <a href=\"#1-1-创建文章\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>1.1. 创建文章</h3>\n      <figure class=\"highlight cmd\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo n \"文章名称\"</span><br><span class=\"line\">hexo c &amp; hexo g</span><br></pre></td></tr></table></div></figure>\n\n\n        <h3 id=\"1-2-创建分类、标签页面（即创建页面）\"   >\n          <a href=\"#1-2-创建分类、标签页面（即创建页面）\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>1.2. 创建分类、标签页面（即创建页面）</h3>\n      <p>🔹 创建分类页面</p>\n<p>在Hexo主路径下，执行以下命令</p>\n<figure class=\"highlight cmd\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></div></figure>\n\n<p>在文章编写时，在文章顶部的Front-matter添加分类信息：</p>\n<figure class=\"highlight yml\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">categories：</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">分类名称</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">下一级分类名称</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">[同级分类名称...]</span></span><br></pre></td></tr></table></div></figure>\n\n<p>🔹 创建标签页面</p>\n<p>与创建分页页面相同，将categories改为tags即可。<br>不同的是，Front-matter中的tags没有分级。</p>\n<p>例子：</p>\n<figure class=\"highlight yml\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">'个人博客[1]——搭建'</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2020</span><span class=\"number\">-05</span><span class=\"number\">-10</span> <span class=\"number\">17</span><span class=\"string\">:39:21</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span></span><br><span class=\"line\">    <span class=\"string\">个人博客</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">个人博客</span></span><br><span class=\"line\"><span class=\"attr\">photos:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">url</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></div></figure>\n\n<p>🔹 在stun主题内开启分页和标签页面</p>\n<p>在stun主路径下的_config.yml配置文件的menu节点下添加页面配置信息，如下</p>\n<figure class=\"highlight yml\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"attr\">home:</span> <span class=\"string\">/</span> <span class=\"string\">||</span> <span class=\"string\">fas</span> <span class=\"string\">fa-home</span></span><br><span class=\"line\">  <span class=\"attr\">archives:</span> <span class=\"string\">/archives/</span> <span class=\"string\">||</span> <span class=\"string\">fas</span> <span class=\"string\">fa-folder-open</span></span><br><span class=\"line\">  <span class=\"attr\">categories:</span> <span class=\"string\">/categories/</span> <span class=\"string\">||</span> <span class=\"string\">fas</span> <span class=\"string\">fa-layer-group</span></span><br><span class=\"line\">  <span class=\"attr\">tags:</span> <span class=\"string\">/tags/</span> <span class=\"string\">||</span> <span class=\"string\">fas</span> <span class=\"string\">fa-tags</span></span><br><span class=\"line\">  <span class=\"comment\"># You can add a secondary menu like follow.</span></span><br><span class=\"line\">  <span class=\"comment\"># xxx1: javascript:; || fa(s|r|l|d|b) fa-xxx</span></span><br></pre></td></tr></table></div></figure>\n\n<p>效果图：<br><img   src=\"https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/%E5%8D%9A%E5%AE%A2/20200511143752.png?x-oss-process=image/resize,p_100/sharpen,50\" style=\"width: image/resize,p_100/sharpen,50px;\"  alt=\"博客/20200511143752\"></p>\n\n        <h2 id=\"2-修改\"   >\n          <a href=\"#2-修改\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>2.修改</h2>\n      \n        <h3 id=\"2-1-修改文章名称\"   >\n          <a href=\"#2-1-修改文章名称\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>2.1. 修改文章名称</h3>\n      <p>&emsp;&emsp;Hexo未提供修改文件名称的命令。</p>\n<p>🔹 解决方法：</p>\n<p>&emsp;&emsp;最简单的方式就是重新创建该文章，将要修改文章迁移过去。单独修改文章名称和修改文章内的Title标签是无效的。<br>&emsp;&emsp;也可使用hexo-console-renamer插件，后续使用后再来补充。</p>\n\n        <h3 id=\"2-2-删除文章\"   >\n          <a href=\"#2-2-删除文章\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>2.2 删除文章</h3>\n      <p>&emsp;&emsp;同样的，Hexo未提供删除文章的命令。</p>\n<p>🔹 解决方法：</p>\n<p>&emsp;&emsp;在Hexo主路径下的\\source_posts文件夹内，手动删除文章文件，之后再重新创建博客内容，即运行以下命令</p>\n<figure class=\"highlight cmd\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo c &amp; hexo g</span><br></pre></td></tr></table></div></figure>","categories":["个人博客"],"tags":["个人博客"]},{"title":"[总结]Git的基本使用","url":"/2020/05/13/%E6%80%BB%E7%BB%93-Git%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","content":"<blockquote>\n<p>Git作为一个版本控制的工具,在我们学习过程中是必不可少的。不仅是Git仓库GitHub、Gitee，还是在编辑器VSCode，Git在管理文件、控制文件版本、回退文件、多人协作、并发开发等有着重要的地位。<br>以下将对Git的基本使用继续总结、记录。</p>\n</blockquote>\n<a id=\"more\"></a>\n\n        <h2 id=\"1-Git与SVN的简单区分\"   >\n          <a href=\"#1-Git与SVN的简单区分\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>1. Git与SVN的简单区分</h2>\n      <p>🔹 实现方式上<br>&emsp;SVN : 集中版本控制。SVN所控制的所有版本内容存储在单一服务器上，本地用户在未联网的情况下，只能看到所同步的版本内容。<br>&emsp;Git : 分布式版本控制。不同于SVN，本地的每个本地用户都能获取到所有版本内容，且Commit操作是在用户本地进，之后再push到远端仓库。<br>&emsp;Git相比SVN，空间成本增加了，且安全性也有所下降，但也减少了数据损失而无法恢复的风险。</p>\n<p>🔹 克隆多分支项目<br>&emsp;SVN克隆所有分支的内容<br>&emsp;Git克隆master分支,其它分支只获取相关元素，节省了时间。</p>\n\n        <h2 id=\"2-Git的基本使用\"   >\n          <a href=\"#2-Git的基本使用\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>2. Git的基本使用</h2>\n      \n        <h3 id=\"2-1-配置信息\"   >\n          <a href=\"#2-1-配置信息\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>2.1 配置信息</h3>\n      <p>🔹 获取配置信息：</p>\n<figure class=\"highlight cs\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取全部配置信息</span></span><br><span class=\"line\">git config -l</span><br><span class=\"line\"><span class=\"comment\">// 获取系统级别配置信息，对应 \\git主目录\\etc\\gitconfig</span></span><br><span class=\"line\">git config --system -l</span><br><span class=\"line\"><span class=\"comment\">// 获取用户(全局)级别的配置信息，对应 \\user\\Administrator\\.gitconfig</span></span><br><span class=\"line\">git config --<span class=\"keyword\">global</span> -l</span><br></pre></td></tr></table></div></figure>\n\n<p>🔹 配置全局的用户信息</p>\n<figure class=\"highlight cs\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --<span class=\"keyword\">global</span> user.name <span class=\"string\">\"用户名\"</span></span><br><span class=\"line\">git config --<span class=\"keyword\">global</span> user.email 邮箱</span><br></pre></td></tr></table></div></figure>\n\n\n        <h3 id=\"2-2-操作仓库内容\"   >\n          <a href=\"#2-2-操作仓库内容\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>2.2 操作仓库内容</h3>\n      <p>🔹 初始化本地仓库</p>\n<figure class=\"highlight cs\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></div></figure>\n\n<p>🔹 添加到缓存并提交到本地仓库</p>\n<figure class=\"highlight cs\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"keyword\">add</span> .  </span><br><span class=\"line\">git commit -m <span class=\"string\">\"注释\\提交的说明信息\"</span></span><br></pre></td></tr></table></div></figure>\n\n<p>🔹 提交到远程仓库</p>\n<figure class=\"highlight cs\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">git push 地址 master</span><br></pre></td></tr></table></div></figure>\n\n<p>🔹 克隆远程仓库 \\ 获取远程代码</p>\n<figure class=\"highlight cs\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone 地址 分支(eg:master)</span><br><span class=\"line\">git pull 地址 分支(eg:master)</span><br></pre></td></tr></table></div></figure>\n\n<p>🔹 查看本地文件状态</p>\n<figure class=\"highlight cs\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></div></figure>\n<p><img   src=\"https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/git/20200513120026.png?x-oss-process=image/resize,p_80/sharpen,100\" style=\"width: image/resize,p_80/sharpen,100px;\"  alt=\"git/20200513120026\"></p>\n\n        <h2 id=\"3-HEAD\"   >\n          <a href=\"#3-HEAD\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>3.HEAD</h2>\n      <p>HEAD 指当前分支的最近一次提交<br>head 指commit对象</p>\n<p>head 包含 HEAD</p>\n<p>🔹 占位符 ~ 与 ^</p>\n<p>~ ： 表示祖先commit<br>&emsp;&emsp;eg : HEAD~ = HEAD~1 = 前一代commit（父辈）<br>&emsp;&emsp;&emsp;HEAD~~ = HEAD~2 = 前两代commit（爷爷辈）<br>^ :  单个父辈时，与 ~ 基本一致。<br>&emsp;&emsp;多个父辈时，^ = ^1 = 第一个父辈</p>\n<p>🔹 案例</p>\n<p><img   src=\"https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/git/20200512233813.png?x-oss-process=image/resize,p_70/sharpen,100\" style=\"width: image/resize,p_70/sharpen,100px;\"  alt=\"git/20200512233813\"></p>\n<figure class=\"highlight cs\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">G   H   I   J</span><br><span class=\"line\"> \\ /     \\ /</span><br><span class=\"line\">  D   E   F</span><br><span class=\"line\">   \\  |  / \\</span><br><span class=\"line\">    \\ | /   |</span><br><span class=\"line\">     \\|/    |</span><br><span class=\"line\">      B     C</span><br><span class=\"line\">       \\   /</span><br><span class=\"line\">        \\ /</span><br><span class=\"line\">         A</span><br><span class=\"line\">A =      = A^<span class=\"number\">0</span></span><br><span class=\"line\">B = A^   = A^<span class=\"number\">1</span>     = A~<span class=\"number\">1</span></span><br><span class=\"line\">C = A^<span class=\"number\">2</span>  = A^<span class=\"number\">2</span></span><br><span class=\"line\">D = A^^  = A^<span class=\"number\">1</span>^<span class=\"number\">1</span>   = A~<span class=\"number\">2</span></span><br><span class=\"line\">E = B^<span class=\"number\">2</span>  = A^^<span class=\"number\">2</span></span><br><span class=\"line\">F = B^<span class=\"number\">3</span>  = A^^<span class=\"number\">3</span></span><br><span class=\"line\">G = A^^^ = A^<span class=\"number\">1</span>^<span class=\"number\">1</span>^<span class=\"number\">1</span> = A~<span class=\"number\">3</span></span><br><span class=\"line\">H = D^<span class=\"number\">2</span>  = B^^<span class=\"number\">2</span>    = A^^^<span class=\"number\">2</span>  = A~<span class=\"number\">2</span>^<span class=\"number\">2</span></span><br><span class=\"line\">I = F^   = B^<span class=\"number\">3</span>^    = A^^<span class=\"number\">3</span>^</span><br><span class=\"line\">J = F^<span class=\"number\">2</span>  = B^<span class=\"number\">3</span>^<span class=\"number\">2</span>   = A^^<span class=\"number\">3</span>^<span class=\"number\">2</span></span><br></pre></td></tr></table></div></figure>\n\n<p><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://scarletsky.github.io/2016/12/29/tilde-and-caret-in-git/\"  target=\"_blank\" rel=\"noopener\">👉此内容参考来源</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></p>\n\n        <h2 id=\"4-信息查看\"   >\n          <a href=\"#4-信息查看\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>4. 信息查看</h2>\n      <p>🔹 获取本地文件状态</p>\n<figure class=\"highlight cs\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></div></figure>\n\n<p>🔹 获取commit历史信息</p>\n<figure class=\"highlight cs\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">git log</span><br><span class=\"line\">git log --oneline</span><br></pre></td></tr></table></div></figure>\n\n<p>🔹 查看当前索引(暂存区)</p>\n<figure class=\"highlight cs\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">git ls-files -s</span><br></pre></td></tr></table></div></figure>\n\n<p>🔹 显示了 HEAD 快照实际的目录列表</p>\n<figure class=\"highlight cs\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">git cat-file -p HEAD</span><br></pre></td></tr></table></div></figure>\n\n<p>🔹 查看HEAD的当前指向</p>\n<figure class=\"highlight cs\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">cat .git/HEAD</span><br></pre></td></tr></table></div></figure>\n\n<p>🔹 查看HEAD各个祖先</p>\n<figure class=\"highlight cs\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">git rev-parse HEAD~ <span class=\"comment\">//前一个祖先(父辈)</span></span><br></pre></td></tr></table></div></figure>\n\n\n        <h2 id=\"5-撤销操作\"   >\n          <a href=\"#5-撤销操作\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>5. 撤销操作</h2>\n      <p>🔹 git checkout [不写|HEAD] &lt;file&gt; //旧版</p>\n<p>🔹 git  restore [不写|–staged] &lt;file&gt; //新版</p>\n<p>🔹 git reset [–hard|soft|mixed(默认)|merge|keep] [commit|HEAD]<br>(1) –soft : 回退到暂存区状态<br>(2) –mixed : 回退到本地状态（本地修改的内容存在）<br>(3) –hard : 回退到某次提交，清除所有历史状态，包括本地文件内容。</p>\n<p>🔹 git revert HEAD^<br>    重新提交，保留历史记录<br>    git reset不保留历史记录<br>    <img   src=\"https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/git/20200513010450.png?x-oss-process=image/resize,p_70/sharpen,100\" style=\"width: image/resize,p_70/sharpen,100px;\"  alt=\"git/20200513010450\"><br>    <img   src=\"https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/git/20200513120122.png?x-oss-process=image/resize,p_90/sharpen,100\" style=\"width: image/resize,p_90/sharpen,100px;\"  alt=\"git/20200513120122\"></p>\n<p>🔹 重写最后一次commit</p>\n<figure class=\"highlight cs\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">git commit --amend -m</span><br></pre></td></tr></table></div></figure>\n\n<p><img   src=\"https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/git/20200513143620_.png?x-oss-process=image/resize,p_100/sharpen,50\" style=\"width: image/resize,p_100/sharpen,50px;\"  alt=\"git/20200513143620_\"></p>\n\n        <h2 id=\"6-冲突解决\"   >\n          <a href=\"#6-冲突解决\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>6. 冲突解决</h2>\n      <p>🔹 提交时，发生冲突</p>\n<p>执行git pull，发生冲突后，git会将两个版本的内容合并在一起。<br>解决：先git status，查找发生冲突的文件，自行修改冲突内容后再提交，pull</p>\n<p>🔹 回退commit，发生冲突</p>\n<p>执行revert HEAD^，发生冲突。<br>解决：同样查看冲突、修改冲突后，执行git revert –continue。</p>\n\n        <h2 id=\"7-Git的分支处理\"   >\n          <a href=\"#7-Git的分支处理\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>7. Git的分支处理</h2>\n      <p>🔹 常用命令</p>\n<figure class=\"highlight cs\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># 列出所有本地分支</span></span><br><span class=\"line\">git branch</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># 列出所有远程分支</span></span><br><span class=\"line\">git branch -r</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># 新建一个分支，但依然停留在当前分支</span></span><br><span class=\"line\">git branch [branch-name]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># 新建一个分支，并切换到该分支</span></span><br><span class=\"line\">git checkout -b [branch]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># 切换分支</span></span><br><span class=\"line\">git checkout [branch]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># 合并指定分支到当前分支</span></span><br><span class=\"line\">$ git merge [branch]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># 删除分支</span></span><br><span class=\"line\">$ git branch -d [branch-name]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># 删除远程分支</span></span><br><span class=\"line\">$ git push origin --delete [branch-name]</span><br><span class=\"line\">$ git branch -dr [remote/branch]</span><br></pre></td></tr></table></div></figure>\n\n<p><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://mp.weixin.qq.com/s/Bf7uVhGiu47uOELjmC5uXQ\"  target=\"_blank\" rel=\"noopener\">👉此内容来源</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></p>\n<blockquote>\n<p>参考文章：<br><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://mp.weixin.qq.com/s/Bf7uVhGiu47uOELjmC5uXQ\"  target=\"_blank\" rel=\"noopener\">狂神说 聊Git📘</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span><br><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://blog.csdn.net/ligang2585116/article/details/51816372#t7\"  target=\"_blank\" rel=\"noopener\">CSDN 奋飛 Git Pro深入浅出（二）📘</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></p>\n</blockquote>\n","categories":["个人笔记","工具","版本控制","Git"],"tags":["版本控制","Git"]}]