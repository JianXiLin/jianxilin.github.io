[{"title":"[总结]CSS样式失效的原因","url":"/2020/05/11/总结-CSS样式失效的原因/","content":"\nCSS样式生效，需要正确的语法，并且其样式内容不被覆盖。\n以下先总结三点原因（后续再补充）：\n🔹 错误使用单行注释\n🔹 CSS选择器优先级较低\n🔹 Chrome浏览器存在CSS文件缓存\n<!--more-->\n## 1. 在外部CSS中不能使用单行注释\n\n在CSS选择器上使用单行注释，将导致该注释下的这个CSS选择器里面的内容失效。\n如下代码所示,“.post-readmore__link{}”将失效,“.post-readmore__link:hover{}”有效，不会受到影响。\n\n```css\n//readmore button （第一个CSS选择器无效）\n.post-readmore__link{\n    background-color: #27ae60;\n}\n.post-readmore__link:hover{\n    background-color: #1f7f47;\n}\n```\n\n而单行注释添加在CSS样式内，该CSS仍有效\n\n```css\n.post-readmore__link{\n    background-color: #27ae60; //green （有效）\n}\n```\n\n若需要使用注释，可使用多行注释。如下：\n\n```css\n/* readmore button */\n.post-readmore__link{\n    background-color: #27ae60; //green （有效）\n}\n```\n\n## 2. CSS选择器优先级低于原有的CSS选择器\n\n### 2.1. 当多个CSS选择器选择目标相同时\n\n🔹 级别相同，后加载的CSS选择器覆盖前CSS选择器中相同的样式。\n🔹 级别不同，高级别CSS选择器覆盖低级别CSS选择器中相同的样式。\n\n### 2.2. 级别判断\n\n🔹 内嵌式CSS级别高于外部CSS，可视为最高级别。\n\n🔹 <b>#ID</b> > <b>.Class</b>、属性选择器([type=\"button\"])和伪类(:hover)  >  <b>标签</b>类型和伪元素(::after)\n级别计算案例：\n![keng/CSS/20200511114245](https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/keng/CSS/20200511114245.png?x-oss-process=image/resize,p_100/sharpen,50)\n图片内容来源：[MDN Web Docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance#Specificity_2)\n\n🔹 使用!important覆盖任何样式声明\n\n```css\n.post-readmore__link{\n    background-color: #27ae60 !important;\n}\n```\n\n对于都添加！important的样式，则再由其选择器优先级来判断。\n\n## 3.chrome浏览器存在缓存\n\n🔹 原因:\n&emsp;&emsp;chrome浏览器为了提高加载效率，缓存了JS、CSS文件，故修改后的文件无法立即生效。\n\n🔹 解决方法：\n方式一：来回切换开启缓存来重置缓存内容（不一定有效）。\n&emsp;&emsp;F12打开开发者工具，进入Network，在Disable cache前打勾✔，刷新页面。再把Disable cache关闭，取消✔，再次刷新页面。\n\n![keng/CSS/20200511130923](https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/keng/CSS/20200511130923.png?x-oss-process=image/resize,p_100/sharpen,50)\n\n方式二：来回切换开启缓存来重置缓存内容\n&emsp;&emsp;F12打开开发者工具，然后在浏览器的刷新按钮右击，选择“清空缓存并硬性重新加载”\n\n![keng/CSS/20200511154213](https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/keng/CSS/20200511154213.png?x-oss-process=image/resize,p_100/sharpen,50)\n","tags":["前端","CSS"],"categories":["踩坑记录","前端","CSS"]},{"title":"个人博客[2]——美化","url":"/2020/05/11/个人博客-2-——美化/","content":"\n> 环境要求：node.js 和 npm\n> 基于 Hexo博客框架\n> 基于 Hexo主题stun\n\n美化内容以下：\n🔹 主题设置\n🔹 博客主题样式自定义\n🔹 博客文章样式自定义\n<!--more-->\n\n效果图：\n![博客/20200510162900](https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/博客/20200510162900.png?x-oss-process=image/resize,p_100/sharpen,50)\n\n[👉Hexo官方地址](https://hexo.io/zh-cn/index.html)  [👉Hexo-theme-stun官方地址](https://liuyib.github.io/hexo-theme-stun/zh-CN/)\n\n## 1. 修改主题\n\n### 1.1. 下载主题(stun)\n\ngit clone <https://github.com/liuyib/hexo-theme-stun.git> themes/stun\n\n### 1.2. 配置主题\n\n修改_config.yml\n\n    ```yml\n        #Extensions\n        ...\n        theme: yilia\n    ```\n\n### 1.3. Hexo重设与发布\n\n    清除 hexo clean\n    创建 hexo g\n    启动 hexo s\n    推到远端 hexo d\n\n## 2. 基本样式修改\n\n主题的相关设置详见[官方文档📗](https://liuyib.github.io/hexo-theme-stun/zh-CN/guide/primary.html#%E7%BD%91%E7%AB%99%E9%A1%B6%E9%83%A8%E8%AE%BE%E7%BD%AE)\n\n可修改Hexo主路径下的_config.yml,将生效于所有主题。\n也可修改hexo/theme/stun下的_config.xml,将只生效于stun主题。\n\n### 2.1. 修改博客图标等图片\n\n🔹 方式一：覆盖原图像\n\n在Hexo主路径下的\\themes\\stun\\source\\images\\icons中，使用相同大小的图片覆盖。之后查看stun下的_config.xml是否开启对应的功能。\n\n🔹 方式二：自定义路径\n\n在_config.xml相应的配置下，设置图片路径为自定义图片路径（Hexo下的路径、图床上的路径）\n\n### 2.2. 修改网页样式\n\n🔹 修改文章样式\n\n将CSS样式添加到stun主题的路径下的\\source\\css\\_custom\\index.styl文件内即可。\n内容如下：\n\n```css\n// Custom styles by yourself.\n// You should always modify the style here,\n    not in the source code.\n// Otherwise, when the theme is updated,\n    the code you modified will be overwritten.\nbody {\n  // modify your style here\n  // eg: background-color: blue;  \n\n    h1 {\n      text-align: center;\n    }\n    h1, h2{\n      color: #4CAF50;\n    }\n    ...\n}\n```\n\n🔹 修改博客样式\n\n（1）在stun主题的路径下的\\source\\css创建文件夹，自定义名称，名称前需带\"_\"，例如：_myCss。在该创建的文件夹下放置个人的CSS文件。\n（2）配置CSS文件。\n在stun\\source\\css\\index.styl文件内添加以下内容：\n@import '个人的CSS文件全路径'\n如下：\n\n```css\n// Variables Layer\n// --------------------------------------------------\n@import './_variables/index.styl';\n// Mixins Layer\n// --------------------------------------------------\n@import './_mixins/index.styl';\n// Common Layer\n// --------------------------------------------------\n@import './_common/index.styl';\n// Custom Layer\n// --------------------------------------------------\n@import './_custom/index.styl';\n\n// MyCSS\n// --------------------------------------------------\n@import './_myCss/myCss.css';\n```\n","tags":["个人博客"],"categories":["个人博客"]},{"title":"个人博客[3]——写作","url":"/2020/05/11/个人博客-3-——写作/","content":"\n> 环境要求：node.js 和 npm\n> 基于 Hexo博客框架\n> 基于 Hexo主题stun\n\n本文内容包含：\n🔹 创建、修改、删除文章\n🔹 创建分类、标签页面\n🔹 在stun主题内开启分页和标签页面\n<!--more-->\n## 1. 创建\n\n具体操作见[官方文档📗](https://hexo.io/zh-cn/docs/writing)\n\n### 1.1. 创建文章\n\n```cmd\nhexo n \"文章名称\"\nhexo c & hexo g\n```\n\n### 1.2. 创建分类、标签页面（即创建页面）\n\n🔹 创建分类页面\n\n在Hexo主路径下，执行以下命令\n\n```cmd\n    hexo new page categories\n```\n\n在文章编写时，在文章顶部的Front-matter添加分类信息：\n\n```yml\n    categories：\n        - 分类名称\n        - 下一级分类名称\n        - [同级分类名称...]\n```\n\n🔹 创建标签页面\n\n与创建分页页面相同，将categories改为tags即可。\n不同的是，Front-matter中的tags没有分级。\n\n例子：\n\n```yml\n---\ntitle: '个人博客[1]——搭建'\ndate: 2020-05-10 17:39:21\ntags:\n    个人博客\ncategories:\n    - 个人博客\nphotos:\n    - url\n---\n```\n\n🔹 在stun主题内开启分页和标签页面\n\n在stun主路径下的_config.yml配置文件的menu节点下添加页面配置信息，如下\n\n```yml\nmenu:\n  home: / || fas fa-home\n  archives: /archives/ || fas fa-folder-open\n  categories: /categories/ || fas fa-layer-group\n  tags: /tags/ || fas fa-tags\n  # You can add a secondary menu like follow.\n  # xxx1: javascript:; || fa(s|r|l|d|b) fa-xxx\n```\n\n效果图：\n![博客/20200511143752](https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/博客/20200511143752.png?x-oss-process=image/resize,p_100/sharpen,50)\n\n## 2.修改\n\n### 2.1. 修改文章名称\n\n&emsp;&emsp;Hexo未提供修改文件名称的命令。\n\n🔹 解决方法：\n\n&emsp;&emsp;最简单的方式就是重新创建该文章，将要修改文章迁移过去。单独修改文章名称和修改文章内的Title标签是无效的。\n&emsp;&emsp;也可使用hexo-console-renamer插件，后续使用后再来补充。\n\n### 2.2 删除文章\n\n&emsp;&emsp;同样的，Hexo未提供删除文章的命令。\n\n🔹 解决方法：\n\n&emsp;&emsp;在Hexo主路径下的\\source\\_posts文件夹内，手动删除文章文件，之后再重新创建博客内容，即运行以下命令\n\n```cmd\nhexo c & hexo g\n```","tags":["个人博客"],"categories":["个人博客"]},{"title":"个人博客[1]——搭建","url":"/2020/05/10/个人博客-1-——搭建/","content":"\n\n> 环境要求：node.js 和 npm\n> 基于 Hexo博客框架\n\n[👉Hexo官方地址](https://hexo.io/zh-cn/index.html)\n<!-- more -->\n## 1. 配置环境\n\n安装node.js和npm\n修改npm的镜像为阿里镜像，即按照cnpm\n\n- <b>安装cnpm</b>\n    cmd命令：\n    &emsp;&emsp;npm install -g cnpm --registry=<https://registry.npm.taobao.org>\n    安装测试：\n    &emsp;&emsp;cnpm -v\n\n    ![20200509224340](https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/博客/20200509224340.png?x-oss-process=image/resize,p_70/sharpen,100)\n\n## 2. 安装Hexo框架\n\n2.1. 安装：cnpm install -g hero-cli\n   ![博客/20200509230904](https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/博客/20200509230904.png?x-oss-process=image/resize,p_100/sharpen,50)\n\n2.2. 验证安装：hexo -v\n    ![博客/20200509230612](https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/博客/20200509230612.png?x-oss-process=image/resize,p_100/sharpen,50)\n\n## 3. 初始化Hexo博客\n\n3.1. 初始化hexo项目：hexo init\n![博客/20200509234848](https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/博客/20200509234848.png?x-oss-process=image/resize,p_70/sharpen,100)\n\n3.2. 启动项目：hexo s\n![博客/20200510005009](https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/博客/20200510005009.png?x-oss-process=image/resize,p_70/sharpen,100)\n\n## 4. 添加第一篇文章\n\n[👉Hexo官方:写作](https://hexo.io/zh-cn/docs/writing)\n\n1. 创建新文章：hexo n 文件名\n2. 清理：hexo clean\n3. 生成文章：hexo g\n4. 重启：hexo s\n\n## 5. 部署到GitHub上\n\n5.1. 创建git仓库,名称为 \"git账号名.github.io\"\n5.2. 安装github部署插件。\n    在本地博客路径下，运行 cnpm install --save hexo-deployer-git\n    ![博客/20200510010947](https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/博客/20200510010947.png?x-oss-process=image/resize,p_90/sharpen,100)\n5.3. 添加仓库信息\n    修改_config.yml。\n    在#deployment节点下，内容如下：\n    ==冒号后需 + 空格==\n\n    ```yml\n    #deployment\n    deploy:\n        type: git\n        repo: 仓库地址\n        branch: master\n    ```\n\n5.4. 部署到远端\n    hexo d\n    ![博客/20200510010628](https://jianxi-md-pics.oss-cn-beijing.aliyuncs.com/note-md-imgs/博客/20200510010628.png?x-oss-process=image/resize,p_100/sharpen,50)\n","tags":["个人博客"],"categories":["个人博客"]}]